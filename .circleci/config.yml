# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  testing:
    docker:
    # specify the version you desire here
    - image: circleci/php:7.1-node-browsers

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mysql:9.4

    working_directory: ~/repo

    steps:
    - checkout

    # install php ext : bcmath
    - run: sudo docker-php-ext-install bcmath

    - run:
        name: Setup Laravel testing environment variables for CircleCI test
        command: cp .env.example .env

    # download and cache dependencies
    - restore_cache:
        keys:
        - composer-v1-{{ checksum "composer.lock" }}
        # fallback to using the latest cache if no exact match is found
        - composer-v1-

    - run: composer install -n --prefer-dist

    - save_cache:
        paths:
        - ./vendor
        key: composer-v1-{{ checksum "composer.lock" }}

    # generate key
    - run: php artisan key:generate

    # run tests!
    - run: vendor/bin/phpunit

  docker_build:
    docker:
    - image: docker:18.06.1-ce-git

    working_directory: ~/app

    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Install dependencies
        command: |
          apk add --no-cache py-pip=10.0.1-r0
          pip install docker-compose==1.22.0 awscli==1.16.14

    - restore_cache:
        keys:
        - docker-v1-{{ .Branch }}
        paths:
        - /caches/app.tar

#    - run:
#        name: Copy .env
#        command: |
#          cp .env.example .env

    - run:
        name: Load Docker image layer cache
        command: |
          set +o pipefail
          docker load -i /caches/app.tar | true

    - run:
        name: Build application Docker image
        command: |
          docker build --cache-from=app -t app .
          docker build --cache-from=app -t web -f docker/web.dockerfile docker

    - run:
        name: Save Docker image layer cache
        command: |
          mkdir -p /caches
          docker save -o /caches/app.tar app

    - save_cache:
        key: docker-v1-{{ .Branch }}-{{ epoch }}
        paths:
        - /caches/app.tar

    - deploy:
        name: Push application Docker image
        command: |
          docker tag app "yupmin-ct/${CIRCLE_PROJECT_REPONAME}"
          docker tag web "yupmin-ct/${CIRCLE_PROJECT_REPONAME}-web"
          docker images

workflows:
  version: 2
  testing_and_build:
    jobs:
    - testing
    - docker_build:
        requires:
        - testing
        filters:
#          branches:
#            ignore: /.*/
          tags:
            only: /^\d+\.\d+\.\d+$/
